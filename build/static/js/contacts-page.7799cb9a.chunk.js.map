{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/HomeView.module.scss","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-operations.js","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getAllContacts","state","contacts","items","getFilterContacts","createSelector","filter","normalizedFilter","toLowerCase","item","name","includes","getIsLoading","loading","Form","styled","form","Button","button","Span","span","Label","label","ContactForm","dispatch","useDispatch","useSelector","contactsSelectors","useState","setName","number","setNumber","onSubmit","e","payload","preventDefault","some","contact","alert","console","log","addRequest","axios","post","then","data","addSuccess","catch","error","addError","message","type","pattern","title","required","onChange","target","Li","li","ContactItem","id","find","onClick","deleteRequest","delete","deleteSuccess","deleteError","deleteContact","Ul","ul","ContactList","map","Filter","filterContacts","ContactsView","isLoading","useEffect","fetchRequest","get","fetchSuccess","fetchError","isFilterShow","className","styles","container","logo","logoAccent","Loader"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,UAAY,4BAA4B,KAAO,uBAAuB,WAAa,+B,mICCxFC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OASzCC,EAAoBC,YAC/B,CAACL,EAHe,SAAAC,GAAK,OAAIA,EAAMC,SAASI,UAIxC,SAACH,EAAOG,GACN,IAAMC,EAAmBD,EAAOE,cAChC,OAAOL,EAAMG,QAAO,SAAAG,GAAI,OACtBA,EAAKC,KAAKF,cAAcG,SAASJ,SAK1BK,EAAe,SAAAX,GAAK,OAAIA,EAAMC,SAASW,S,OCf9CC,EAAOC,IAAOC,KAAV,yEAIJC,EAASF,IAAOG,OAAV,yOAYNC,EAAOJ,IAAOK,KAAV,6EAKJC,EAAQN,IAAOO,MAAV,oDAwDIC,EApDK,WAClB,IAAMC,EAAWC,cACXvB,EAAWwB,YAAYC,GAFL,EAGAC,mBAAS,IAHT,mBAGjBlB,EAHiB,KAGXmB,EAHW,OAIID,mBAAS,IAJb,mBAIjBE,EAJiB,KAITC,EAJS,KAqBxB,OACE,eAACjB,EAAD,CAAMkB,SAhBa,SAAAC,GAEnB,ICjBsBC,GDgBtBD,EAAEE,iBACsBjC,EAASkC,MAAK,SAAAC,GAAO,OAAIA,EAAQ3B,OAASA,MAEhE4B,MAAM,GAAD,OAAI5B,EAAJ,6BAGPc,GCtBsBU,EDsBF,CAAExB,OAAMoB,UCtBK,SAAAN,GAEnCe,QAAQC,IAAIN,GACZV,EAASiB,eAETC,IACGC,KAAK,YAAaT,GAClBU,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcrB,EAASsB,YAAWD,OACvCE,OAAM,SAAAC,GAAK,OAAIxB,EAASyB,YAASD,EAAME,gBDexCrB,EAAQ,IACRE,EAAU,MAOV,UACE,eAACV,EAAD,WACE,cAACF,EAAD,iCACA,uBACEgC,KAAK,OACLzC,KAAK,OACLjB,MAAOiB,EACP0C,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAdiB,SAAAtB,GAAC,OAAIJ,EAAQI,EAAEuB,OAAO/D,aAiB3C,eAAC4B,EAAD,WACE,cAACF,EAAD,6CACA,uBACEgC,KAAK,MACLzC,KAAK,SACLjB,MAAOqC,EACPsB,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAzBmB,SAAAtB,GAAC,OAAIF,EAAUE,EAAEuB,OAAO/D,aA4B/C,cAACwB,EAAD,CAAQkC,KAAK,SAAb,6GExEAlC,EAASF,IAAOG,OAAV,sOAaNuC,EAAK1C,IAAO2C,GAAV,oDAsBOC,EAlBK,SAAC,GAAY,IAAVC,EAAS,EAATA,GAAS,EACLlC,YHpBG,SAAAkC,GAAE,OAC9BvD,YAAe,CAACL,IAAiB,SAAAG,GAAK,OACpCA,EAAM0D,MAAK,SAAAxB,GAAO,OAAIA,EAAQuB,KAAOA,QGkBFjC,CAAiCiC,IAA9DlD,EADsB,EACtBA,KAAMoB,EADgB,EAChBA,OACRN,EAAWC,cAEjB,OACE,eAACgC,EAAD,WACG/C,EADH,KACWoB,EACT,cAAC,EAAD,CAAQqB,KAAK,SAASW,QAJL,kBAAMtC,EDOA,SAAAoC,GAAE,OAAI,SAAApC,GACjCA,EAASuC,eAETrB,IACGsB,OADH,oBACuBJ,IACpBhB,MAAK,kBAAMpB,EAASyC,YAAcL,OAClCb,OAAM,SAAAC,GAAK,OAAIxB,EAAS0C,YAAYlB,EAAME,cCbTiB,CAAcP,KAI9C,4DCzBAQ,EAAKrD,IAAOsD,GAAV,uEAgBOC,EAXK,WAClB,IAAMpE,EAAWwB,YAAYC,GAC7B,OACE,cAACyC,EAAD,UACGlE,EAASqE,KAAI,gBAAGX,EAAH,EAAGA,GAAH,OACZ,cAAC,EAAD,CAAsBA,GAAIA,GAARA,SCAXY,EAZA,WACb,IAAMhD,EAAWC,cAGjB,OACE,gCACE,sJACA,uBAAO0B,KAAK,OAAOI,SALI,SAAAtB,GAAC,OAAIT,EAASiD,YAAexC,EAAEuB,OAAO/D,e,0BCmCpDiF,UA3BM,WACnB,IAAMlD,EAAWC,cACXvB,EAAWwB,YAAY1B,GACvB2E,EAAYjD,YAAYd,GAE9BgE,qBAAU,WACRpD,GJN+B,SAAAA,GACjCA,EAASqD,eAETnC,IACGoC,IAAI,aACJlC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcrB,EAASuD,YAAalC,OACzCE,OAAM,SAAAC,GAAK,OAAIxB,EAASwD,YAAWhC,YICnC,IAEH,IAAMiC,EAAe/E,EAASR,OAAS,EAEvC,OACE,sBAAKwF,UAAWC,IAAOC,UAAvB,UACE,qBAAIF,UAAWC,IAAOE,KAAtB,kBACO,sBAAMH,UAAWC,IAAOG,WAAxB,qBAEP,cAAC,EAAD,IAEA,kFAECL,GAAgB,cAAC,EAAD,IAEhBN,EAAY,cAACY,EAAA,EAAD,IAAa,cAAC,EAAD","file":"static/js/contacts-page.7799cb9a.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeView_container__19wd-\",\"logo\":\"HomeView_logo__HuyW3\",\"logoAccent\":\"HomeView_logoAccent__2lg4l\"};","import { createSelector } from 'reselect';\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getContactById = id =>\n  createSelector([getAllContacts], items =>\n    items.find(contact => contact.id === id),\n  );\n\nconst getFilter = state => state.contacts.filter;\n\nexport const getFilterContacts = createSelector(\n  [getAllContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport const getIsLoading = state => state.contacts.loading;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 6px;\n  border: 2px solid green;\n  color: green;\n  width: 200px;\n  margin: 0 auto;\n  padding: 0.25em 1em;\n  &:hover {\n    background: LemonChiffon;\n  }\n`;\nconst Span = styled.span`\n  margin-right: 10px;\n  display: inline-block;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 15px;\n`;\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getAllContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const unavailableName = contacts.some(contact => contact.name === name);\n    if (unavailableName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChangeName = e => setName(e.target.value);\n  const handleChangeNumber = e => setNumber(e.target.value);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Span>Имя</Span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeName}\n        />\n      </Label>\n      <Label>\n        <Span>Номер</Span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeNumber}\n        />\n      </Label>\n      <Button type=\"submit\">Добавить контакт</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import axios from 'axios';\nimport {\n  addRequest,\n  addSuccess,\n  addError,\n  deleteRequest,\n  deleteSuccess,\n  deleteError,\n  fetchRequest,\n  fetchSuccess,\n  fetchError,\n} from './contacts-action';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchSuccess(data)))\n    .catch(error => dispatch(fetchError(error)));\n};\n\nexport const addContact = payload => dispatch => {\n  // const contact = { ...payload };\n  console.log(payload);\n  dispatch(addRequest());\n\n  axios\n    .post('/contacts', payload)\n    .then(({ data }) => dispatch(addSuccess(data)))\n    .catch(error => dispatch(addError(error.message)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteSuccess(id)))\n    .catch(error => dispatch(deleteError(error.message)));\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 6px;\n  border: 2px solid red;\n  color: red;\n  width: 80px;\n  margin-left: 1em;\n  padding: 0.25em 1em;\n  &:hover {\n    background: LemonChiffon;\n  }\n`;\n\nconst Li = styled.li`\n  margin-bottom: 10px;\n`;\n\nconst ContactItem = ({ id }) => {\n  const { name, number } = useSelector(contactsSelectors.getContactById(id));\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <Li>\n      {name}: {number}\n      <Button type=\"button\" onClick={handleDelete}>\n        Удалить\n      </Button>\n    </Li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Ul = styled.ul`\n  list-style: none;\n  padding-left: 5px;\n`;\n\nconst ContactList = () => {\n  const contacts = useSelector(contactsSelectors.getFilterContacts);\n  return (\n    <Ul>\n      {contacts.map(({ id }) => (\n        <ContactItem key={id} id={id} />\n      ))}\n    </Ul>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/contacts-action';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleChangeFilter = e => dispatch(filterContacts(e.target.value));\n\n  return (\n    <div>\n      <p>Найти контакт по имени</p>\n      <input type=\"text\" onChange={handleChangeFilter} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { React, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport Loader from '../components/Loader/Loader';\nimport { fetchContacts } from '../redux/contacts/contacts-operations';\nimport {\n  getAllContacts,\n  getIsLoading,\n} from '../redux/contacts/contacts-selectors';\nimport styles from './HomeView.module.scss';\n\nconst ContactsView = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getAllContacts);\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, []);\n\n  const isFilterShow = contacts.length > 1;\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.logo}>\n        Phone<span className={styles.logoAccent}>Book</span>\n      </h1>\n      <ContactForm />\n\n      <h2>Контакты</h2>\n\n      {isFilterShow && <Filter />}\n\n      {isLoading ? <Loader /> : <ContactList />}\n    </div>\n  );\n};\n\nexport default ContactsView;\n\n// class ContactsView extends Component {\n//   componentDidMount() {\n//     this.props.fetchContacts();\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <h1>Phonebook</h1>\n//         <ContactForm />\n\n//         <h2>Contacts</h2>\n//         <Filter />\n//         <ContactList />\n//       </div>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = dispatch => ({\n//   fetchContacts: () => dispatch(fetchContacts()),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactsView);\n"],"sourceRoot":""}