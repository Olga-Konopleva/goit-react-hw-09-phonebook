{"version":3,"sources":["redux/contacts/contacts-action.js","components/Navigation/Navigation.js","components/AppBar/AuthNav/AuthNav.js","components/AppBar/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.module.scss","components/AppBar/AuthNav/AuthNav.module.scss","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/AppBar/UserMenu/UserMenu.module.scss","components/Loader/Loader.js","components/AppBar/AppBar.module.scss","components/Loader/Loader.module.scss"],"names":["fetchRequest","createAction","fetchSuccess","fetchError","addRequest","addSuccess","addError","deleteRequest","deleteSuccess","deleteError","filterContacts","Navigation","isAutendicated","useSelector","getAutendicated","className","styles","nav","nav_link","activeClassName","nav_linkActive","to","exact","AuthNav","authNavContainer","Button","styled","button","UserMenu","email","getEmail","dispatch","useDispatch","userMenu","userName","type","onClick","logOut","AppBar","header","PrivateRoute","Component","component","routeProps","isAuthendicated","render","props","PublicRoute","isAutenticated","restricted","HomeView","lazy","ContactsView","LoginView","RegisterView","App","this","onGetCurrentUser","fallback","Loader","path","mapDispatchToProps","getCurrentUser","connect","itemsReducer","createReducer","_","payload","state","filter","item","id","filterReducer","loading","combineReducers","items","initialState","name","user","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","error","registerError","loginError","logoutError","getCurrentUserError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","getName","module","exports","axios","defaults","baseURL","headers","common","Authorization","register","credential","a","registerRequest","post","data","message","logIn","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get","color","height","width","timeout","loader"],"mappings":"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","file":"static/js/main.2138fbd8.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchRequest = createAction('contact/FetchRequest');\nexport const fetchSuccess = createAction('contact/FetchSuccess');\nexport const fetchError = createAction('contact/FetchError');\n\nexport const addRequest = createAction('contact/AddRequest');\nexport const addSuccess = createAction('contact/AddSuccess');\nexport const addError = createAction('contact/AddError');\n\nexport const deleteRequest = createAction('contact/DeleteRequest');\nexport const deleteSuccess = createAction('contact/DeleteSuccess');\nexport const deleteError = createAction('contact/DeleteError');\n\nexport const filterContacts = createAction('contact/Filter');\n\n//Pure Redux\n// export const addContact = (name, number) => ({\n//   type: actionTypes.ADD,\n//   payload: { id: uuidv4(), name, number },\n// });\n\n// export const deleteContact = id => ({\n//   type: actionTypes.DELETE,\n//   payload: id,\n// });\n\n// export const filterContacts = value => ({\n//   type: actionTypes.FILTER,\n//   payload: value,\n// });\n","import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getAutendicated } from '../../redux/auth/auth-selectors';\nimport styles from './Navigation.module.scss';\n\nconst Navigation = () => {\n  const isAutendicated = useSelector(getAutendicated);\n\n  return (\n    <nav className={styles.nav}>\n      <NavLink\n        className={styles.nav_link}\n        activeClassName={styles.nav_linkActive}\n        to=\"/\"\n        exact\n      >\n        Главная\n      </NavLink>\n      {isAutendicated && (\n        <NavLink\n          className={styles.nav_link}\n          activeClassName={styles.nav_linkActive}\n          to=\"/contacts\"\n          exact\n        >\n          Мои контакты\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.scss';\n\nconst AuthNav = () => {\n  return (\n    <div className={styles.authNavContainer}>\n      <NavLink\n        to=\"/register\"\n        className={styles.nav_link}\n        activeClassName={styles.nav_linkActive}\n      >\n        Регистрация\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        className={styles.nav_link}\n        activeClassName={styles.nav_linkActive}\n      >\n        Логин\n      </NavLink>\n    </div>\n  );\n};\n\nexport default AuthNav;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from '../../../redux/auth/auth-operations';\nimport { getEmail } from '../../../redux/auth/auth-selectors';\nimport styles from './UserMenu.module.scss';\n// import Button from 'react-bootstrap/Button';\nimport styled from 'styled-components';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 6px;\n  border: 2px solid #3f3f3f;\n  color: #3f3f3f;\n  width: 100px;\n  height: 30px;\n  margin-left: 0;\n  padding: 0.25em 1em;\n  font-weight: 700;\n\n  &:hover {\n    background: LemonChiffon;\n  }\n  @include for-size(tablet) {\n    margin-left: 1em;\n  }\n}\n`;\n\nconst UserMenu = () => {\n  const email = useSelector(getEmail);\n  const dispatch = useDispatch();\n  const onLogout = () => dispatch(logOut());\n\n  return (\n    <div className={styles.userMenu}>\n      <p className={styles.userName}>{email}</p>\n      <Button type=\"button\" onClick={onLogout}>\n        Выйти\n      </Button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import Navigation from '../Navigation/Navigation';\nimport AuthNav from './AuthNav/AuthNav';\nimport UserMenu from './UserMenu/UserMenu';\nimport { getAutendicated } from '../../redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\nimport styled from './AppBar.module.scss';\n\nconst AppBar = () => {\n  const isAutendicated = useSelector(getAutendicated);\n\n  return (\n    <header className={styled.header}>\n      <Navigation />\n      {isAutendicated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n};\n\nexport default AppBar;\n\n// class AppBar extends Component {\n//   render() {\n//     const { isAutendicated } = this.props;\n\n//     return (\n//       <header className={styled.header}>\n//         <Navigation />\n//         {isAutendicated ? <UserMenu /> : <AuthNav />}\n//       </header>\n//     );\n//   }\n// }\n\n// const mapStateToProps = state => ({\n//   isAutendicated: getAutendicated(state),\n// });\n\n// export default connect(mapStateToProps)(AppBar);\n","import { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\nimport { getAutendicated } from '../redux/auth/auth-selectors';\n\n// Если маршрут приватный и пользователь залогинен, то рендерит компонент\n// В противном случае рендерит Redirect на /login\n\nconst PrivateRoute = ({ component: Component, ...routeProps }) => {\n  const isAuthendicated = useSelector(getAutendicated);\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthendicated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router';\nimport { getAutendicated } from '../redux/auth/auth-selectors';\n\n// Если маршрут ограниченный и пользователь залогинен, то рендерит редирект на /contacts\n// В противном случак рендерит компонент\n\nconst PublicRoute = ({ component: Component, ...routeProps }) => {\n  const isAutenticated = useSelector(getAutendicated);\n\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAutenticated && routeProps.restricted ? (\n          <Redirect to=\"/contacts\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import { Component, lazy, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport AppBar from './components/AppBar/AppBar';\nimport Loader from './components/Loader/Loader';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { getCurrentUser } from './redux/auth/auth-operations';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"home-page\" */),\n);\n\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"contacts-page\" */),\n);\n\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"login-page\" */),\n);\n\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"register-page\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <div>\n        <AppBar />\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path=\"/\" component={HomeView} />\n            <PrivateRoute path=\"/contacts\" component={ContactsView} />\n            <PublicRoute restricted path=\"/login\" component={LoginView} />\n            <PublicRoute restricted path=\"/register\" component={RegisterView} />\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  addRequest,\n  addSuccess,\n  addError,\n  deleteRequest,\n  deleteSuccess,\n  deleteError,\n  filterContacts,\n  fetchRequest,\n  fetchSuccess,\n  fetchError,\n} from './contacts-action';\n\nconst itemsReducer = createReducer([], {\n  [fetchSuccess]: (_, { payload }) => payload,\n  [addSuccess]: (state, { payload }) => [...state, payload],\n  [deleteSuccess]: (state, { payload }) =>\n    state.filter(item => item.id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addRequest]: () => true,\n  [addSuccess]: () => false,\n  [addError]: () => false,\n  [deleteRequest]: () => true,\n  [deleteSuccess]: () => false,\n  [deleteError]: () => false,\n  [fetchRequest]: () => true,\n  [fetchSuccess]: () => false,\n  [fetchError]: () => false,\n});\n// const itemsReducer = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.ADD:\n//       return [...state, payload];\n//     case actionTypes.DELETE:\n//       return state.filter(item => item.id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.FILTER:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n});\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  registerSuccess,\n  registerRequest,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\nconst initialState = { name: null, email: null };\n\nconst user = createReducer(initialState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: (_, { payload }) => initialState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logoutError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAutenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n  [logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAutenticated,\n  token,\n  error,\n});\n","import {\n  combineReducers,\n  configureStore,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n// import { combineReducers, createStore } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\nimport persistReducer from 'redux-persist/es/persistReducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n//Pure Redux\n// const rootReducer = combineReducers({\n//     contacts: contactsReducer,\n//   });\n// const store = createStore(rootReducer, composeWithDevTools());\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","export const getAutendicated = state => state.auth.isAutenticated;\n\nexport const getEmail = state => state.auth.user.email;\n\nexport const getName = state => state.auth.user.name;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__3equO\",\"nav_link\":\"Navigation_nav_link__1qp7Q\",\"nav_linkActive\":\"Navigation_nav_linkActive__1kq12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authNavContainer\":\"AuthNav_authNavContainer__1hw6e\",\"nav_link\":\"AuthNav_nav_link__1LaGr\",\"nav_linkActive\":\"AuthNav_nav_linkActive__15oYu\"};","import axios from 'axios';\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = credential => async dispatch => {\n  dispatch(registerRequest());\n  try {\n    const { data } = await axios.post('/users/signup', credential);\n    token.set(data.token);\n    dispatch(registerSuccess(data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\nexport const logIn = credential => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const { data } = await axios.post('/users/login', credential);\n    token.set(data.token);\n    dispatch(loginSuccess(data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\nexport const logOut = () => async dispatch => {\n  dispatch(logoutRequest());\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const { data } = await axios.get('/users/current');\n    dispatch(getCurrentUserSuccess(data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"UserMenu_userMenu__2OTuo\",\"userName\":\"UserMenu_userName__10wfg\"};","import Spinner from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport styles from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <div>\n      <Spinner\n        type=\"ThreeDots\"\n        color=\"rgb(92, 164, 182)\"\n        height={80}\n        width={80}\n        timeout={3000}\n        className={styles.loader}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__kQT0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2AANG\"};"],"sourceRoot":""}