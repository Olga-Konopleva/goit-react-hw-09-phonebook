{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView.module.scss","views/RegisterView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","RegisterView","useState","name","email","password","user","setUser","dispatch","useDispatch","handleChange","target","prev","onSubmit","e","preventDefault","register","className","styles","form","label","type","onChange","Button","styled","button"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,UAAY,+B,sICiE/EC,UA5DM,WAAO,IAAD,EACDC,mBAAS,CAC/BC,KAAM,GACNC,MAAO,GACPC,SAAU,KAJa,mBAClBC,EADkB,KACZC,EADY,KAanBC,EAAWC,cAQXC,EAAe,SAAC,GAAD,QAAGC,OAAUR,EAAb,EAAaA,KAAMT,EAAnB,EAAmBA,MAAnB,OACnBa,GAAQ,SAAAK,GAAI,kCAAUA,GAAV,kBAAiBT,EAAOT,QAEtC,OACE,8BACE,uBAAMmB,SAXW,SAAAC,GACnBA,EAAEC,iBACFP,EAASQ,YAASV,KAScW,UAAWC,IAAOC,KAAhD,UACE,wBAAOF,UAAWC,IAAOE,MAAzB,UACE,sDACA,uBACEC,KAAK,OACL3B,MAAOY,EAAKH,KACZA,KAAK,OACLmB,SAAUZ,OAGd,wBAAOO,UAAWC,IAAOE,MAAzB,UACE,kEACA,uBACEC,KAAK,QACL3B,MAAOY,EAAKF,MACZD,KAAK,QACLmB,SAAUZ,OAGd,wBAAOO,UAAWC,IAAOE,MAAzB,UACE,wEACA,uBACEC,KAAK,WACL3B,MAAOY,EAAKD,SACZF,KAAK,WACLmB,SAAUZ,OAGd,cAACa,EAAD,CAAQF,KAAK,SAAb,gIAqER,IAAME,EAASC,IAAOC,OAAV","file":"static/js/register-page.0b21acaf.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__3Ogle\",\"label\":\"LoginView_label__oSdsE\",\"container\":\"LoginView_container__1IbXu\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../redux/auth/auth-operations';\nimport styled from 'styled-components';\nimport styles from './LoginView.module.scss';\n\nconst RegisterView = () => {\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const resetState = () => ({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register(user));\n    resetState();\n  };\n\n  const handleChange = ({ target: { name, value } }) =>\n    setUser(prev => ({ ...prev, [name]: value }));\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <label className={styles.label}>\n          <span>Имя</span>\n          <input\n            type=\"text\"\n            value={user.name}\n            name=\"name\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          <span>Почта</span>\n          <input\n            type=\"email\"\n            value={user.email}\n            name=\"email\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          <span>Пароль</span>\n          <input\n            type=\"password\"\n            value={user.password}\n            name=\"password\"\n            onChange={handleChange}\n          />\n        </label>\n        <Button type=\"submit\">Зарегистрироваться</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterView;\n\n// class RegisterView extends Component {\n//   state = {\n//     name: '',\n//     email: '',\n//     password: '',\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.onRegister(this.state);\n//     this.setState({ name: '', email: '', password: '' });\n//   };\n\n//   handleChange = ({ target: { name, value } }) => {\n//     this.setState({ [name]: value });\n//   };\n//   render() {\n//     const { name, email, password } = this.state;\n//     return (\n//       <div>\n//         <form onSubmit={this.handleSubmit} className={styles.form}>\n//           <label className={styles.label}>\n//             <span>Имя</span>\n//             <input\n//               type=\"text\"\n//               value={name}\n//               name=\"name\"\n//               onChange={this.handleChange}\n//             />\n//           </label>\n//           <label className={styles.label}>\n//             <span>Почта</span>\n//             <input\n//               type=\"email\"\n//               value={email}\n//               name=\"email\"\n//               onChange={this.handleChange}\n//             />\n//           </label>\n//           <label className={styles.label}>\n//             <span>Пароль</span>\n//             <input\n//               type=\"password\"\n//               value={password}\n//               name=\"password\"\n//               onChange={this.handleChange}\n//             />\n//           </label>\n//           <Button type=\"submit\">Зарегистрироваться</Button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   onRegister: register,\n// };\n\n// export default connect(null, mapDispatchToProps)(RegisterView);\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 6px;\n  border: 2px solid green;\n  color: green;\n  width: 150px;\n  margin-top: 1em;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0.25em 1em;\n  &:hover {\n    background: LemonChiffon;\n  }\n`;\n"],"sourceRoot":""}